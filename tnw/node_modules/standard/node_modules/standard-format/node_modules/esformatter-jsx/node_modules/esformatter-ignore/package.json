{
  "name": "esformatter-ignore",
  "version": "0.1.3",
  "description": "an esformatter plugin to make esformatter ignore certain lines and blocks of code",
  "repository": {
    "type": "git",
    "url": "git://github.com/royriojas/esformatter-ignore"
  },
  "license": "MIT",
  "author": {
    "name": "Roy Riojas",
    "url": "http://royriojas.com"
  },
  "main": "index.js",
  "files": [
    "index.js"
  ],
  "engines": {
    "node": ">=0.10.0"
  },
  "prepush": [
    "npm run check"
  ],
  "precommit": [
    "npm run check"
  ],
  "scripts": {
    "beautify": "esbeautifier 'index.js' 'specs/**/*.spec.js'",
    "beautify-check": "esbeautifier -k 'index.js' 'specs/**/*.spec.js'",
    "eslint": "eslinter 'index.js' 'specs/**/*.spec.js'",
    "test": "mocha-runner 'specs/**/*.spec.js'",
    "cover": "istanbul cover -x 'specs/**/*.spec.js' mocha-runner 'specs/**/*.spec.js' html text-summary",
    "watch": "npm run cover && watch-spawn -p 'specs/**/*.spec.js' -p 'index.js' -p  npm run cover",
    "lint": "npm run beautify && npm run eslint && npm test",
    "check": "npm run beautify-check && npm run eslint && npm test",
    "changelog": "changelogx -f markdown -o ./changelog.md",
    "do-changelog": "npm run changelog && git add ./changelog.md && git commit -m 'DOC: Generate changelog' --no-verify",
    "install-hooks": "prepush install && changelogx install-hook && precommit install",
    "pre-v": "npm run check",
    "post-v": "npm run do-changelog && git push --no-verify && git push --tags --no-verify",
    "bump-major": "npm run pre-v && npm version major -m 'BLD: Release v%s' && npm run post-v",
    "bump-minor": "npm run pre-v && npm version minor -m 'BLD: Release v%s' && npm run post-v",
    "bump-patch": "npm run pre-v && npm version patch -m 'BLD: Release v%s' && npm run post-v",
    "exec-demo": "cd demo && node runner.js"
  },
  "keywords": [
    "esformatter-plugin",
    "esformatter",
    "ignore block",
    "ignore line",
    "AST",
    "codestyle",
    "ignore code block"
  ],
  "peerDependencies": {},
  "dependencies": {},
  "devDependencies": {
    "changelogx": "^1.0.18",
    "esbeautifier": "^3.2.0",
    "esformatter": "^0.7.3",
    "eslinter": "^2.0.6",
    "istanbul": "^0.3.17",
    "mocha-runner": "^1.0.8",
    "precommit": "^1.1.5",
    "prepush": "^3.1.4",
    "proxyquire": "^1.6.0",
    "watch-spawn": "^1.0.3"
  },
  "changelogx": {
    "ignoreRegExp": [
      "BLD: Release",
      "DOC: Generate Changelog",
      "Generated Changelog"
    ],
    "issueIDRegExp": "#(\\d+)",
    "commitURL": "https://github.com/royriojas/esformatter-ignore/commit/{0}",
    "authorURL": "https://github.com/{0}",
    "issueIDURL": "https://github.com/royriojas/esformatter-ignore/issues/{0}",
    "projectName": "esformatter-ignore"
  },
  "readme": "# [esformatter](https://github.com/millermedeiros/esformatter)-jsx\n> an esformatter plugin to make esformatter ignore certain lines and blocks of code\n\n[![NPM Version](http://img.shields.io/npm/v/esformatter-ignore.svg?style=flat)](https://npmjs.org/package/esformatter-ignore)\n[![Build Status](http://img.shields.io/travis/royriojas/esformatter-ignore.svg?style=flat)](https://travis-ci.org/royriojas/esformatter-ignore)\n\n## Overview\n\n**esformatter-ignore** is a plugin for [esformatter](https://github.com/millermedeiros/esformatter) meant to allow\ncertain lines and blocks of code to be ignored by esformatter\n\n**Example**\n\n```javascript\nvar someVar = 'foo';\nif (someVar) {\n  /*esfmt-ignore-start*/\n// you want for some reason this block to remain untoched by the formatter\n// most use cases are for certain cases where the formatter produces some buggy\n// output like these cases:\n// - https://github.com/millermedeiros/esformatter/issues/359\n// - https://github.com/millermedeiros/esformatter/issues/358\n// - https://github.com/millermedeiros/esformatter/issues/347\ncache.setKey( 'persistifyArgs', {\ncache: browserifyOpts.cache,\npackageCache: browserifyOpts.packageCache\n} );\n    /*esfmt-ignore-end*/\n}\n```\n\nIf you want to ignore only a single line you can also do it by doing\n\n```javascript\nif (someKey) {\n  // ignoring next line cause esformatter@7.0.3\n  // mistakenly move the semicolon to the next line\n  delete objectCache[someKey]; // esfmt-ignore-line\n}\n```\n\n## Installation\n\n```sh\n$ npm install esformatter-ignore --save-dev\n```\n\n## Config\n\nNewest esformatter versions autoload plugins from your `node_modules` [See this](https://github.com/millermedeiros/esformatter#plugins)\n\nAdd to your esformatter config file:\n\nIn order for this to work, this plugin should be the first one! (I Know too picky, but who isn't).\n\n```javascript\n{\n  \"plugins\": [\n    \"esformatter-ignore\"\n  ]\n}\n```\n\nOr you can manually register your plugin:\n\n```js\n// register plugin\nesformatter.register(require('esformatter-ignore'));\n```\n\n## node usage\n\n```js\nvar fs = require('fs');\nvar esformatter = require('esformatter');\n//register plugin manually\nesformatter.register(require('esformatter-ignore'));\n\nvar str = fs.readFileSync('./someKewlFile.js').toString();\nvar output = esformatter.format(str);\n//-> output will now contain the formatted code with the blocks marked to be ignored remain intact\n```\n\nSee [esformatter](https://github.com/millermedeiros/esformatter) for more options and further usage info.\n\n## License\n\n[MIT](License)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/royriojas/esformatter-ignore/issues"
  },
  "_id": "esformatter-ignore@0.1.3",
  "dist": {
    "shasum": "86e59b6d26b48f79de8d0e1eda268f588126101c"
  },
  "_from": "esformatter-ignore@^0.1.3",
  "_resolved": "https://registry.npmjs.org/esformatter-ignore/-/esformatter-ignore-0.1.3.tgz"
}
