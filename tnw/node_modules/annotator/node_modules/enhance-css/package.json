{
  "name": "enhance-css",
  "version": "1.1.0",
  "author": {
    "name": "Jakub Pawlowicz",
    "email": "jakub@goalsmashers.com",
    "url": "http://twitter.com/GoalSmashers"
  },
  "description": "A well-tested CSS enhancer (Base64, assets hosts, cache boosters, etc)",
  "license": "MIT",
  "keywords": [
    "css",
    "enhance",
    "base64",
    "assets",
    "asset hosts"
  ],
  "homepage": "https://github.com/GoalSmashers/enhance-css",
  "repository": {
    "type": "git",
    "url": "https://github.com/GoalSmashers/enhance-css.git"
  },
  "bugs": {
    "url": "https://github.com/GoalSmashers/enhance-css/issues"
  },
  "bin": {
    "enhancecss": "./bin/enhancecss"
  },
  "main": "index.js",
  "files": [
    "bin",
    "lib",
    "History.md",
    "index.js",
    "LICENSE"
  ],
  "scripts": {
    "check": "jshint ./bin/enhancecss .",
    "prepublish": "npm run check",
    "test": "vows"
  },
  "dependencies": {
    "commander": "2.1.x"
  },
  "devDependencies": {
    "jshint": "2.4.x",
    "vows": "0.7.x"
  },
  "engines": {
    "node": ">=0.8.0"
  },
  "readme": "[![NPM version](https://badge.fury.io/js/enhance-css.png)](https://badge.fury.io/js/enhance-css)\n[![Build Status](https://secure.travis-ci.org/GoalSmashers/enhance-css.png)](https://travis-ci.org/GoalSmashers/enhance-css)\n[![Dependency Status](https://david-dm.org/GoalSmashers/enhance-css.png?theme=shields.io)](https://david-dm.org/GoalSmashers/enhance-css)\n[![devDependency Status](https://david-dm.org/GoalSmashers/enhance-css/dev-status.png?theme=shields.io)](https://david-dm.org/GoalSmashers/enhance-css#info=devDependencies)\n\n## What is enhance-css?\n\nEnhance-css is a [node.js](http://nodejs.org/) tool which can tweak your CSS files to:\n\n* improve caching - by rewriting URLs and renaming files to include either timestamps or MD5 hashes;\n* parellelize requests - by rewriting URLs with one or more asset hosts;\n* reduce number of requests - by embedding images as [Base64](http://en.wikipedia.org/wiki/Base64) data.\n\nThere is also an option to create non-embedded version suited well\nfor older browsers (IE 7 and below).\n\n\n## Usage\n\n### What are the requirements?\n\n```\nnode.js 0.8.0+ (fully tested on OS X 10.6+, CentOS, and Windows 7)\n```\n\n### How to install enhance-css?\n\n```\nnpm install enhance-css\n```\n\n### How to use enhance-css CLI?\n\n```\nenhancecss [options] [source-file]\n\n-h, --help                    output usage information\n-v, --version                 output the version number\n-r, --root [root-path]        Set a root path to which resolve absolute @import rules\n-o, --output [output-file]    Use [output-file] as output instead of STDOUT\n--crypted-stamp               Rename image files with MD5 hash attached (hard cache boosters)\n--no-stamp                    Disable adding stamp to URLs\n--no-embed-version            Output both embedded and non embedded version\n--force-embed                 Forces embed on all supported assets\n--asset-hosts [host-pattern]  Use one or more asset hosts, e.g assets[0,1,2].example.com\n--pregzip                     Automatically gzip the enhanced files (not available when no output file given)\n```\n\n#### Examples:\n\nMost likely you are going to pass multiple CSS files into it\nand specify root directory and output file, e.g.\n\n```bash\ncat path/to/first.css path/to/second.css path/to/third.css | enhancecss -o bundled.css --root ./public/\n```\n\nThe `--root` parameter is required to properly locate images referenced in the css files.\n\nTo **embed images** in Base64 just add the *embed* argument to the image url, e.g.\n\n```css\na { background: url(/images/arrow.png?embed) 0 0 no-repeat; }\n```\n\n### Non-embedded version\n\nIn case you also need to support older browser, just add `--noembedversion` parameter, e.g.\n\n```bash\ncat path/to/first.css path/to/second.css path/to/third.css | enhancecss -o bundled.css --root ./public/ --noembedversion\n```\n\nwhich will result in two output files: *bundled.css* and *bundled-noembed.css*.\n\n### Asset hosts\n\nTo use one or more asset hosts, just specify `--assetshosts` parameter, e.g.\n\n```bash\ncat path/to/first.css path/to/second.css path/to/third.css | enhancecss -o bundled.css --root ./public/ --assethosts assets[0,1].example.com\n```\n\nwhich will result in all non-embedded image URLs bound to either assets0.example.com or assets1.example.com.\n\n### What are the enhance-css' dev commands?\n\nFirst clone the source, then run:\n\n* `npm run check` to check JS sources with [JSHint](https://github.com/jshint/jshint/)\n* `npm test` for the test suite\n\n\n## License\n\nEnhance-css is released under the [MIT License](/LICENSE).\n",
  "readmeFilename": "Readme.md",
  "_id": "enhance-css@1.1.0",
  "dist": {
    "shasum": "7a98eaf6c73ccd81b78a53d03fcdf7f8c966582b"
  },
  "_from": "enhance-css@^1.1.0",
  "_resolved": "https://registry.npmjs.org/enhance-css/-/enhance-css-1.1.0.tgz"
}
